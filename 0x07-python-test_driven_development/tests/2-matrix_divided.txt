#----------------------------------------#
2-matrix_divided.txt module
-----------------------------------------------
a function that divides all elements of a matrix
------------------------------------------------
function: matrix_divided(matrix, div)
-----------------------------------------------

import the module:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Matrix Tests
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix = [[1, 3 , 6 , 9], [4, 2, 3]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# div canâ€™t be equal to 0
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# div must be a number (integer or float)
>>> matrix_divided(matrix, "2")
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided(matrix, None)
Traceback (most recent call last):
    ...
TypeError: div must be a number

# matrix as the first argument and -1 as the second argument
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, -1)
[[-1.0, -2.0, -3.0], [-4.0, -5.0, -6.0]]

# test case scenario mamtrix must be a number
>>> matrix_divided([[1, 2, 3], [4, 5, "6"]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [2, ["2", 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, "3"], 2, [4, 3, 2]]
>>> matrix_divided(matrix, 2j + 3)
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided([[1, 2], [3, 4]], "two")
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided([[1, 2], [3, 4, 5]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
