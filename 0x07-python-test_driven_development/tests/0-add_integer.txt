Contains tests for the a function that adds 2 integers
------------------------------------------------------
'Test for 0-add_integer module'
-----------------------------------------------------

import module:
>>> add_integer = __import__('0-add_integer').add_integer

'positive integer values'
>>> add_integer(1, 3)
4

'positive floating'
>>> add_integer(3.14, 3.14)
6

'adding two negative floats'
>>> add_integer(-1.5, -2.5)
-4

'negative integer values'
>>> add_integer(-10, -2)
-12

'adding negative float and a zero'
>>> add_integer(-1.234, 0)
-1

'adding two small floats'
>>> add_integer(0.000001, 0.000002)
0

'adding single argument'
>>> add_integer(-10)
88

'adding zero argument'
>>> add_integer(0)
98

'test case when argument b is empty'
>>> add_integer(5,)
103


>>> add_integer(None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

'when a is an integer and b is a string'
>>> add_integer(24, "School")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

'both a and b are empty'
>>> add_integer()
Traceback (most recent call last):
    ...
TypeError: add_integer() missing 1 required positional argument: 'a'

'when b is integer and a is a string'
>>> add_integer("Hello", 24)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

'when a is list'
>>> add_integer([1, 3], 5)
Traceback (most recent call last):
    ...
TypeError: a must be an integer
